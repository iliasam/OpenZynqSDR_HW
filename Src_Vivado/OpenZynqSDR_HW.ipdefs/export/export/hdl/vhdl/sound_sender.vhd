-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sound_sender is
generic (
    C_M_AXI_OUT_BUS_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_OUT_BUS_ID_WIDTH : INTEGER := 1;
    C_M_AXI_OUT_BUS_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUT_BUS_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_OUT_BUS_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUT_BUS_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUT_BUS_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUT_BUS_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_OUT_BUS_TARGET_ADDR : INTEGER := 0;
    C_M_AXI_OUT_BUS_USER_VALUE : INTEGER := 0;
    C_M_AXI_OUT_BUS_PROT_VALUE : INTEGER := 0;
    C_M_AXI_OUT_BUS_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_bus_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in_bus_TVALID : IN STD_LOGIC;
    in_bus_TREADY : OUT STD_LOGIC;
    in_bus_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    in_bus_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    in_bus_TUSER : IN STD_LOGIC_VECTOR (15 downto 0);
    in_bus_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_out_bus_AWVALID : OUT STD_LOGIC;
    m_axi_out_bus_AWREADY : IN STD_LOGIC;
    m_axi_out_bus_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_BUS_ADDR_WIDTH-1 downto 0);
    m_axi_out_bus_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_BUS_ID_WIDTH-1 downto 0);
    m_axi_out_bus_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_out_bus_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_out_bus_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_out_bus_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_out_bus_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_out_bus_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_out_bus_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_out_bus_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_out_bus_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_BUS_AWUSER_WIDTH-1 downto 0);
    m_axi_out_bus_WVALID : OUT STD_LOGIC;
    m_axi_out_bus_WREADY : IN STD_LOGIC;
    m_axi_out_bus_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_BUS_DATA_WIDTH-1 downto 0);
    m_axi_out_bus_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_BUS_DATA_WIDTH/8-1 downto 0);
    m_axi_out_bus_WLAST : OUT STD_LOGIC;
    m_axi_out_bus_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_BUS_ID_WIDTH-1 downto 0);
    m_axi_out_bus_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_BUS_WUSER_WIDTH-1 downto 0);
    m_axi_out_bus_ARVALID : OUT STD_LOGIC;
    m_axi_out_bus_ARREADY : IN STD_LOGIC;
    m_axi_out_bus_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_BUS_ADDR_WIDTH-1 downto 0);
    m_axi_out_bus_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_BUS_ID_WIDTH-1 downto 0);
    m_axi_out_bus_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_out_bus_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_out_bus_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_out_bus_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_out_bus_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_out_bus_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_out_bus_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_out_bus_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_out_bus_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_OUT_BUS_ARUSER_WIDTH-1 downto 0);
    m_axi_out_bus_RVALID : IN STD_LOGIC;
    m_axi_out_bus_RREADY : OUT STD_LOGIC;
    m_axi_out_bus_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_OUT_BUS_DATA_WIDTH-1 downto 0);
    m_axi_out_bus_RLAST : IN STD_LOGIC;
    m_axi_out_bus_RID : IN STD_LOGIC_VECTOR (C_M_AXI_OUT_BUS_ID_WIDTH-1 downto 0);
    m_axi_out_bus_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_OUT_BUS_RUSER_WIDTH-1 downto 0);
    m_axi_out_bus_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_out_bus_BVALID : IN STD_LOGIC;
    m_axi_out_bus_BREADY : OUT STD_LOGIC;
    m_axi_out_bus_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_out_bus_BID : IN STD_LOGIC_VECTOR (C_M_AXI_OUT_BUS_ID_WIDTH-1 downto 0);
    m_axi_out_bus_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_OUT_BUS_BUSER_WIDTH-1 downto 0);
    interrupt_out : OUT STD_LOGIC;
    interrupt_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of sound_sender is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sound_sender_sound_sender,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010-clg400-1,HLS_INPUT_CLOCK=25.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=18.250000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=862,HLS_SYN_LUT=1803,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv9_C8 : STD_LOGIC_VECTOR (8 downto 0) := "011001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7D00000 : STD_LOGIC_VECTOR (31 downto 0) := "00000111110100000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_18F : STD_LOGIC_VECTOR (8 downto 0) := "110001111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal burst_count_reg : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal test_irq_cnt : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal out_bus_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal out_bus_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal select_ln67_reg_311 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_bus_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal or_ln_fu_233_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln_reg_301 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln67_fu_267_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal data_buf_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal data_buf_ce0 : STD_LOGIC;
    signal data_buf_we0 : STD_LOGIC;
    signal data_buf_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_start : STD_LOGIC;
    signal grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_done : STD_LOGIC;
    signal grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_idle : STD_LOGIC;
    signal grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_ready : STD_LOGIC;
    signal grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_in_bus_TREADY : STD_LOGIC;
    signal grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_data_buf_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_data_buf_ce0 : STD_LOGIC;
    signal grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_data_buf_we0 : STD_LOGIC;
    signal grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_data_buf_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_ap_start : STD_LOGIC;
    signal grp_sound_sender_Pipeline_2_fu_186_ap_done : STD_LOGIC;
    signal grp_sound_sender_Pipeline_2_fu_186_ap_idle : STD_LOGIC;
    signal grp_sound_sender_Pipeline_2_fu_186_ap_ready : STD_LOGIC;
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWVALID : STD_LOGIC;
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WVALID : STD_LOGIC;
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WLAST : STD_LOGIC;
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARVALID : STD_LOGIC;
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_RREADY : STD_LOGIC;
    signal grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_BREADY : STD_LOGIC;
    signal grp_sound_sender_Pipeline_2_fu_186_data_buf_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sound_sender_Pipeline_2_fu_186_data_buf_ce0 : STD_LOGIC;
    signal out_bus_AWVALID : STD_LOGIC;
    signal out_bus_AWREADY : STD_LOGIC;
    signal out_bus_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal out_bus_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal out_bus_WVALID : STD_LOGIC;
    signal out_bus_WREADY : STD_LOGIC;
    signal out_bus_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal out_bus_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal out_bus_ARREADY : STD_LOGIC;
    signal out_bus_RVALID : STD_LOGIC;
    signal out_bus_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal out_bus_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal out_bus_BVALID : STD_LOGIC;
    signal out_bus_BREADY : STD_LOGIC;
    signal ap_phi_mux_empty_17_phi_fu_159_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_17_reg_155 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state16 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_sound_sender_Pipeline_2_fu_186_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln64_fu_245_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_194_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_219_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln64_fu_227_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln64_fu_241_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln65_fu_256_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln67_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal regslice_both_in_bus_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in_bus_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal in_bus_TVALID_int_regslice : STD_LOGIC;
    signal in_bus_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in_bus_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_bus_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in_bus_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in_bus_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_bus_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_bus_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in_bus_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in_bus_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_bus_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_bus_V_user_V_U_apdone_blk : STD_LOGIC;
    signal in_bus_TUSER_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal regslice_both_in_bus_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_bus_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_bus_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in_bus_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in_bus_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_bus_V_last_V_U_ack_in : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sound_sender_sound_sender_Pipeline_VITIS_LOOP_48_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_bus_TVALID : IN STD_LOGIC;
        in_bus_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        in_bus_TREADY : OUT STD_LOGIC;
        in_bus_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        in_bus_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        in_bus_TUSER : IN STD_LOGIC_VECTOR (15 downto 0);
        in_bus_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        data_buf_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        data_buf_ce0 : OUT STD_LOGIC;
        data_buf_we0 : OUT STD_LOGIC;
        data_buf_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sound_sender_sound_sender_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_out_bus_AWVALID : OUT STD_LOGIC;
        m_axi_out_bus_AWREADY : IN STD_LOGIC;
        m_axi_out_bus_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_out_bus_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_bus_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_out_bus_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_out_bus_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_out_bus_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_out_bus_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_out_bus_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_out_bus_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_out_bus_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_out_bus_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_bus_WVALID : OUT STD_LOGIC;
        m_axi_out_bus_WREADY : IN STD_LOGIC;
        m_axi_out_bus_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_out_bus_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_out_bus_WLAST : OUT STD_LOGIC;
        m_axi_out_bus_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_bus_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_bus_ARVALID : OUT STD_LOGIC;
        m_axi_out_bus_ARREADY : IN STD_LOGIC;
        m_axi_out_bus_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_out_bus_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_bus_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_out_bus_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_out_bus_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_out_bus_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_out_bus_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_out_bus_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_out_bus_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_out_bus_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_out_bus_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_bus_RVALID : IN STD_LOGIC;
        m_axi_out_bus_RREADY : OUT STD_LOGIC;
        m_axi_out_bus_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_out_bus_RLAST : IN STD_LOGIC;
        m_axi_out_bus_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_bus_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_out_bus_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_bus_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_out_bus_BVALID : IN STD_LOGIC;
        m_axi_out_bus_BREADY : OUT STD_LOGIC;
        m_axi_out_bus_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_out_bus_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_out_bus_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        zext_ln64 : IN STD_LOGIC_VECTOR (22 downto 0);
        data_buf_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        data_buf_ce0 : OUT STD_LOGIC;
        data_buf_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sound_sender_data_buf_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sound_sender_out_bus_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_TARGET_ADDR : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component sound_sender_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    data_buf_U : component sound_sender_data_buf_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => data_buf_address0,
        ce0 => data_buf_ce0,
        we0 => data_buf_we0,
        d0 => grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_data_buf_d0,
        q0 => data_buf_q0);

    grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171 : component sound_sender_sound_sender_Pipeline_VITIS_LOOP_48_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_start,
        ap_done => grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_done,
        ap_idle => grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_idle,
        ap_ready => grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_ready,
        in_bus_TVALID => in_bus_TVALID_int_regslice,
        in_bus_TDATA => in_bus_TDATA_int_regslice,
        in_bus_TREADY => grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_in_bus_TREADY,
        in_bus_TKEEP => in_bus_TKEEP_int_regslice,
        in_bus_TSTRB => in_bus_TSTRB_int_regslice,
        in_bus_TUSER => in_bus_TUSER_int_regslice,
        in_bus_TLAST => in_bus_TLAST_int_regslice,
        data_buf_address0 => grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_data_buf_address0,
        data_buf_ce0 => grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_data_buf_ce0,
        data_buf_we0 => grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_data_buf_we0,
        data_buf_d0 => grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_data_buf_d0);

    grp_sound_sender_Pipeline_2_fu_186 : component sound_sender_sound_sender_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sound_sender_Pipeline_2_fu_186_ap_start,
        ap_done => grp_sound_sender_Pipeline_2_fu_186_ap_done,
        ap_idle => grp_sound_sender_Pipeline_2_fu_186_ap_idle,
        ap_ready => grp_sound_sender_Pipeline_2_fu_186_ap_ready,
        m_axi_out_bus_AWVALID => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWVALID,
        m_axi_out_bus_AWREADY => out_bus_AWREADY,
        m_axi_out_bus_AWADDR => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWADDR,
        m_axi_out_bus_AWID => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWID,
        m_axi_out_bus_AWLEN => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWLEN,
        m_axi_out_bus_AWSIZE => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWSIZE,
        m_axi_out_bus_AWBURST => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWBURST,
        m_axi_out_bus_AWLOCK => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWLOCK,
        m_axi_out_bus_AWCACHE => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWCACHE,
        m_axi_out_bus_AWPROT => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWPROT,
        m_axi_out_bus_AWQOS => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWQOS,
        m_axi_out_bus_AWREGION => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWREGION,
        m_axi_out_bus_AWUSER => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWUSER,
        m_axi_out_bus_WVALID => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WVALID,
        m_axi_out_bus_WREADY => out_bus_WREADY,
        m_axi_out_bus_WDATA => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WDATA,
        m_axi_out_bus_WSTRB => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WSTRB,
        m_axi_out_bus_WLAST => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WLAST,
        m_axi_out_bus_WID => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WID,
        m_axi_out_bus_WUSER => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WUSER,
        m_axi_out_bus_ARVALID => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARVALID,
        m_axi_out_bus_ARREADY => ap_const_logic_0,
        m_axi_out_bus_ARADDR => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARADDR,
        m_axi_out_bus_ARID => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARID,
        m_axi_out_bus_ARLEN => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARLEN,
        m_axi_out_bus_ARSIZE => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARSIZE,
        m_axi_out_bus_ARBURST => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARBURST,
        m_axi_out_bus_ARLOCK => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARLOCK,
        m_axi_out_bus_ARCACHE => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARCACHE,
        m_axi_out_bus_ARPROT => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARPROT,
        m_axi_out_bus_ARQOS => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARQOS,
        m_axi_out_bus_ARREGION => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARREGION,
        m_axi_out_bus_ARUSER => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_ARUSER,
        m_axi_out_bus_RVALID => ap_const_logic_0,
        m_axi_out_bus_RREADY => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_RREADY,
        m_axi_out_bus_RDATA => ap_const_lv32_0,
        m_axi_out_bus_RLAST => ap_const_logic_0,
        m_axi_out_bus_RID => ap_const_lv1_0,
        m_axi_out_bus_RFIFONUM => ap_const_lv9_0,
        m_axi_out_bus_RUSER => ap_const_lv1_0,
        m_axi_out_bus_RRESP => ap_const_lv2_0,
        m_axi_out_bus_BVALID => out_bus_BVALID,
        m_axi_out_bus_BREADY => grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_BREADY,
        m_axi_out_bus_BRESP => ap_const_lv2_0,
        m_axi_out_bus_BID => ap_const_lv1_0,
        m_axi_out_bus_BUSER => ap_const_lv1_0,
        zext_ln64 => or_ln_reg_301,
        data_buf_address0 => grp_sound_sender_Pipeline_2_fu_186_data_buf_address0,
        data_buf_ce0 => grp_sound_sender_Pipeline_2_fu_186_data_buf_ce0,
        data_buf_q0 => data_buf_q0);

    out_bus_m_axi_U : component sound_sender_out_bus_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_OUT_BUS_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_OUT_BUS_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_OUT_BUS_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_OUT_BUS_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_OUT_BUS_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_OUT_BUS_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_OUT_BUS_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_OUT_BUS_BUSER_WIDTH,
        C_TARGET_ADDR => C_M_AXI_OUT_BUS_TARGET_ADDR,
        C_USER_VALUE => C_M_AXI_OUT_BUS_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_OUT_BUS_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_OUT_BUS_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 32,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_out_bus_AWVALID,
        AWREADY => m_axi_out_bus_AWREADY,
        AWADDR => m_axi_out_bus_AWADDR,
        AWID => m_axi_out_bus_AWID,
        AWLEN => m_axi_out_bus_AWLEN,
        AWSIZE => m_axi_out_bus_AWSIZE,
        AWBURST => m_axi_out_bus_AWBURST,
        AWLOCK => m_axi_out_bus_AWLOCK,
        AWCACHE => m_axi_out_bus_AWCACHE,
        AWPROT => m_axi_out_bus_AWPROT,
        AWQOS => m_axi_out_bus_AWQOS,
        AWREGION => m_axi_out_bus_AWREGION,
        AWUSER => m_axi_out_bus_AWUSER,
        WVALID => m_axi_out_bus_WVALID,
        WREADY => m_axi_out_bus_WREADY,
        WDATA => m_axi_out_bus_WDATA,
        WSTRB => m_axi_out_bus_WSTRB,
        WLAST => m_axi_out_bus_WLAST,
        WID => m_axi_out_bus_WID,
        WUSER => m_axi_out_bus_WUSER,
        ARVALID => m_axi_out_bus_ARVALID,
        ARREADY => m_axi_out_bus_ARREADY,
        ARADDR => m_axi_out_bus_ARADDR,
        ARID => m_axi_out_bus_ARID,
        ARLEN => m_axi_out_bus_ARLEN,
        ARSIZE => m_axi_out_bus_ARSIZE,
        ARBURST => m_axi_out_bus_ARBURST,
        ARLOCK => m_axi_out_bus_ARLOCK,
        ARCACHE => m_axi_out_bus_ARCACHE,
        ARPROT => m_axi_out_bus_ARPROT,
        ARQOS => m_axi_out_bus_ARQOS,
        ARREGION => m_axi_out_bus_ARREGION,
        ARUSER => m_axi_out_bus_ARUSER,
        RVALID => m_axi_out_bus_RVALID,
        RREADY => m_axi_out_bus_RREADY,
        RDATA => m_axi_out_bus_RDATA,
        RLAST => m_axi_out_bus_RLAST,
        RID => m_axi_out_bus_RID,
        RUSER => m_axi_out_bus_RUSER,
        RRESP => m_axi_out_bus_RRESP,
        BVALID => m_axi_out_bus_BVALID,
        BREADY => m_axi_out_bus_BREADY,
        BRESP => m_axi_out_bus_BRESP,
        BID => m_axi_out_bus_BID,
        BUSER => m_axi_out_bus_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => out_bus_ARREADY,
        I_ARADDR => ap_const_lv32_0,
        I_ARLEN => ap_const_lv32_0,
        I_RVALID => out_bus_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => out_bus_RDATA,
        I_RFIFONUM => out_bus_RFIFONUM,
        I_AWVALID => out_bus_AWVALID,
        I_AWREADY => out_bus_AWREADY,
        I_AWADDR => out_bus_AWADDR,
        I_AWLEN => out_bus_AWLEN,
        I_WVALID => out_bus_WVALID,
        I_WREADY => out_bus_WREADY,
        I_WDATA => out_bus_WDATA,
        I_WSTRB => out_bus_WSTRB,
        I_BVALID => out_bus_BVALID,
        I_BREADY => out_bus_BREADY);

    regslice_both_in_bus_V_data_V_U : component sound_sender_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_bus_TDATA,
        vld_in => in_bus_TVALID,
        ack_in => regslice_both_in_bus_V_data_V_U_ack_in,
        data_out => in_bus_TDATA_int_regslice,
        vld_out => in_bus_TVALID_int_regslice,
        ack_out => in_bus_TREADY_int_regslice,
        apdone_blk => regslice_both_in_bus_V_data_V_U_apdone_blk);

    regslice_both_in_bus_V_keep_V_U : component sound_sender_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_bus_TKEEP,
        vld_in => in_bus_TVALID,
        ack_in => regslice_both_in_bus_V_keep_V_U_ack_in,
        data_out => in_bus_TKEEP_int_regslice,
        vld_out => regslice_both_in_bus_V_keep_V_U_vld_out,
        ack_out => in_bus_TREADY_int_regslice,
        apdone_blk => regslice_both_in_bus_V_keep_V_U_apdone_blk);

    regslice_both_in_bus_V_strb_V_U : component sound_sender_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_bus_TSTRB,
        vld_in => in_bus_TVALID,
        ack_in => regslice_both_in_bus_V_strb_V_U_ack_in,
        data_out => in_bus_TSTRB_int_regslice,
        vld_out => regslice_both_in_bus_V_strb_V_U_vld_out,
        ack_out => in_bus_TREADY_int_regslice,
        apdone_blk => regslice_both_in_bus_V_strb_V_U_apdone_blk);

    regslice_both_in_bus_V_user_V_U : component sound_sender_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_bus_TUSER,
        vld_in => in_bus_TVALID,
        ack_in => regslice_both_in_bus_V_user_V_U_ack_in,
        data_out => in_bus_TUSER_int_regslice,
        vld_out => regslice_both_in_bus_V_user_V_U_vld_out,
        ack_out => in_bus_TREADY_int_regslice,
        apdone_blk => regslice_both_in_bus_V_user_V_U_apdone_blk);

    regslice_both_in_bus_V_last_V_U : component sound_sender_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_bus_TLAST,
        vld_in => in_bus_TVALID,
        ack_in => regslice_both_in_bus_V_last_V_U_ack_in,
        data_out => in_bus_TLAST_int_regslice,
        vld_out => regslice_both_in_bus_V_last_V_U_vld_out,
        ack_out => in_bus_TREADY_int_regslice,
        apdone_blk => regslice_both_in_bus_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_sound_sender_Pipeline_2_fu_186_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_sound_sender_Pipeline_2_fu_186_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_sound_sender_Pipeline_2_fu_186_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sound_sender_Pipeline_2_fu_186_ap_ready = ap_const_logic_1)) then 
                    grp_sound_sender_Pipeline_2_fu_186_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_ready = ap_const_logic_1)) then 
                    grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_17_reg_155_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state10_io) or (out_bus_BVALID = ap_const_logic_0))) and not((select_ln67_reg_311 = ap_const_lv9_C8)) and not((select_ln67_reg_311 = ap_const_lv9_0)) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                empty_17_reg_155 <= ap_const_lv1_0;
            elsif (((not((((out_bus_BVALID = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_C8)) or ((out_bus_BVALID = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_0)))) and (ap_const_logic_1 = ap_CS_fsm_state16) and (select_ln67_reg_311 = ap_const_lv9_C8)) or (not((((out_bus_BVALID = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_C8)) or ((out_bus_BVALID = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_0)))) and (ap_const_logic_1 = ap_CS_fsm_state16) and (select_ln67_reg_311 = ap_const_lv9_0)))) then 
                empty_17_reg_155 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                burst_count_reg <= select_ln67_fu_267_p3;
                select_ln67_reg_311 <= select_ln67_fu_267_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    or_ln_reg_301(12 downto 4) <= or_ln_fu_233_p3(12 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_boolean_1 = ap_block_state10_io) or (out_bus_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln67_reg_311 = ap_const_lv9_C8)) or (not(((ap_const_boolean_1 = ap_block_state10_io) or (out_bus_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln67_reg_311 = ap_const_lv9_0)))) then
                test_irq_cnt <= grp_fu_194_p2;
            end if;
        end if;
    end process;
    or_ln_reg_301(3 downto 0) <= "0001";
    or_ln_reg_301(22 downto 13) <= "1010000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state3, ap_CS_fsm_state10, select_ln67_reg_311, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state11, grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_done, grp_sound_sender_Pipeline_2_fu_186_ap_done, out_bus_AWREADY, out_bus_WREADY, out_bus_BVALID, ap_block_state10_io, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if ((not(((out_bus_AWREADY = ap_const_logic_0) or (grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_sound_sender_Pipeline_2_fu_186_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if ((not(((ap_const_boolean_1 = ap_block_state10_io) or (out_bus_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln67_reg_311 = ap_const_lv9_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                elsif ((not(((ap_const_boolean_1 = ap_block_state10_io) or (out_bus_BVALID = ap_const_logic_0))) and not((select_ln67_reg_311 = ap_const_lv9_C8)) and not((select_ln67_reg_311 = ap_const_lv9_0)) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif ((not(((ap_const_boolean_1 = ap_block_state10_io) or (out_bus_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln67_reg_311 = ap_const_lv9_C8))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((out_bus_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if ((not((((out_bus_BVALID = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_C8)) or ((out_bus_BVALID = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_0)))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((out_bus_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln65_fu_256_p2 <= std_logic_vector(unsigned(burst_count_reg) + unsigned(ap_const_lv9_1));
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(out_bus_BVALID, ap_block_state10_io)
    begin
        if (((ap_const_boolean_1 = ap_block_state10_io) or (out_bus_BVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state11_blk_assign_proc : process(out_bus_WREADY)
    begin
        if ((out_bus_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(select_ln67_reg_311, out_bus_BVALID)
    begin
        if ((((out_bus_BVALID = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_C8)) or ((out_bus_BVALID = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_0)))) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state17_blk_assign_proc : process(out_bus_WREADY)
    begin
        if ((out_bus_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;
    ap_ST_fsm_state1_blk <= ap_const_logic_0;
    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_done, out_bus_AWREADY)
    begin
        if (((out_bus_AWREADY = ap_const_logic_0) or (grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_done = ap_const_logic_0))) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_sound_sender_Pipeline_2_fu_186_ap_done)
    begin
        if ((grp_sound_sender_Pipeline_2_fu_186_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state10_io_assign_proc : process(select_ln67_reg_311, out_bus_AWREADY)
    begin
                ap_block_state10_io <= (((out_bus_AWREADY = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_C8)) or ((out_bus_AWREADY = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_0)));
    end process;


    ap_block_state16_assign_proc : process(select_ln67_reg_311, out_bus_BVALID)
    begin
                ap_block_state16 <= (((out_bus_BVALID = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_C8)) or ((out_bus_BVALID = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_0)));
    end process;


    ap_phi_mux_empty_17_phi_fu_159_p6_assign_proc : process(select_ln67_reg_311, ap_CS_fsm_state16, empty_17_reg_155)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state16) and (select_ln67_reg_311 = ap_const_lv9_C8)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (select_ln67_reg_311 = ap_const_lv9_0)))) then 
            ap_phi_mux_empty_17_phi_fu_159_p6 <= ap_const_lv1_1;
        else 
            ap_phi_mux_empty_17_phi_fu_159_p6 <= empty_17_reg_155;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    data_buf_address0_assign_proc : process(ap_CS_fsm_state3, grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_data_buf_address0, grp_sound_sender_Pipeline_2_fu_186_data_buf_address0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            data_buf_address0 <= grp_sound_sender_Pipeline_2_fu_186_data_buf_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            data_buf_address0 <= grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_data_buf_address0;
        else 
            data_buf_address0 <= "XXXX";
        end if; 
    end process;


    data_buf_ce0_assign_proc : process(ap_CS_fsm_state3, grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_data_buf_ce0, grp_sound_sender_Pipeline_2_fu_186_data_buf_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            data_buf_ce0 <= grp_sound_sender_Pipeline_2_fu_186_data_buf_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            data_buf_ce0 <= grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_data_buf_ce0;
        else 
            data_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_buf_we0_assign_proc : process(ap_CS_fsm_state3, grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_data_buf_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            data_buf_we0 <= grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_data_buf_we0;
        else 
            data_buf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_194_p2 <= std_logic_vector(unsigned(test_irq_cnt) + unsigned(ap_const_lv16_1));
    grp_sound_sender_Pipeline_2_fu_186_ap_start <= grp_sound_sender_Pipeline_2_fu_186_ap_start_reg;
    grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_start <= grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_start_reg;
    icmp_ln67_fu_261_p2 <= "1" when (unsigned(add_ln65_fu_256_p2) > unsigned(ap_const_lv9_18F)) else "0";
    in_bus_TREADY <= regslice_both_in_bus_V_data_V_U_ack_in;

    in_bus_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state3, grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_in_bus_TREADY)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in_bus_TREADY_int_regslice <= grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_in_bus_TREADY;
        else 
            in_bus_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    interrupt_out <= ap_phi_mux_empty_17_phi_fu_159_p6(0);

    interrupt_out_ap_vld_assign_proc : process(select_ln67_reg_311, ap_CS_fsm_state16, out_bus_BVALID)
    begin
        if ((not((((out_bus_BVALID = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_C8)) or ((out_bus_BVALID = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_0)))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            interrupt_out_ap_vld <= ap_const_logic_1;
        else 
            interrupt_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln64_fu_227_p2 <= (shl_ln_fu_219_p3 or ap_const_lv13_1);
    or_ln_fu_233_p3 <= (ap_const_lv10_280 & or_ln64_fu_227_p2);

    out_bus_AWADDR_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state10, select_ln67_reg_311, grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_done, grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWADDR, out_bus_AWREADY, out_bus_BVALID, ap_block_state10_io, ap_CS_fsm_state4, ap_CS_fsm_state5, zext_ln64_fu_245_p1)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state10_io) or (out_bus_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln67_reg_311 = ap_const_lv9_C8)) or (not(((ap_const_boolean_1 = ap_block_state10_io) or (out_bus_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln67_reg_311 = ap_const_lv9_0)))) then 
            out_bus_AWADDR <= ap_const_lv32_7D00000;
        elsif ((not(((out_bus_AWREADY = ap_const_logic_0) or (grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            out_bus_AWADDR <= zext_ln64_fu_245_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_bus_AWADDR <= grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWADDR;
        else 
            out_bus_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_bus_AWLEN_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state10, select_ln67_reg_311, grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_done, grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWLEN, out_bus_AWREADY, out_bus_BVALID, ap_block_state10_io, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state10_io) or (out_bus_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln67_reg_311 = ap_const_lv9_C8)) or (not(((ap_const_boolean_1 = ap_block_state10_io) or (out_bus_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln67_reg_311 = ap_const_lv9_0)))) then 
            out_bus_AWLEN <= ap_const_lv32_1;
        elsif ((not(((out_bus_AWREADY = ap_const_logic_0) or (grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            out_bus_AWLEN <= ap_const_lv32_10;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_bus_AWLEN <= grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWLEN;
        else 
            out_bus_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_bus_AWVALID_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state10, select_ln67_reg_311, grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_done, grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWVALID, out_bus_AWREADY, out_bus_BVALID, ap_block_state10_io, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((not(((out_bus_AWREADY = ap_const_logic_0) or (grp_sound_sender_Pipeline_VITIS_LOOP_48_1_fu_171_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((ap_const_boolean_1 = ap_block_state10_io) or (out_bus_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln67_reg_311 = ap_const_lv9_C8)) or (not(((ap_const_boolean_1 = ap_block_state10_io) or (out_bus_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln67_reg_311 = ap_const_lv9_0)))) then 
            out_bus_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_bus_AWVALID <= grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_AWVALID;
        else 
            out_bus_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    out_bus_BREADY_assign_proc : process(ap_CS_fsm_state10, select_ln67_reg_311, ap_CS_fsm_state16, grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_BREADY, out_bus_BVALID, ap_block_state10_io, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state10_io) or (out_bus_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not((((out_bus_BVALID = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_C8)) or ((out_bus_BVALID = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_0)))) and (ap_const_logic_1 = ap_CS_fsm_state16) and (select_ln67_reg_311 = ap_const_lv9_C8)) or (not((((out_bus_BVALID = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_C8)) or ((out_bus_BVALID = ap_const_logic_0) and (select_ln67_reg_311 = ap_const_lv9_0)))) and (ap_const_logic_1 = ap_CS_fsm_state16) and (select_ln67_reg_311 = ap_const_lv9_0)))) then 
            out_bus_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_bus_BREADY <= grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_BREADY;
        else 
            out_bus_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    out_bus_WDATA_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state11, grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WDATA, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            out_bus_WDATA <= ap_const_lv32_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            out_bus_WDATA <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_bus_WDATA <= grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WDATA;
        else 
            out_bus_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_bus_WSTRB_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state11, grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WSTRB, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            out_bus_WSTRB <= ap_const_lv4_F;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_bus_WSTRB <= grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WSTRB;
        else 
            out_bus_WSTRB <= "XXXX";
        end if; 
    end process;


    out_bus_WVALID_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state11, grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WVALID, out_bus_WREADY, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((((out_bus_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((out_bus_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            out_bus_WVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_bus_WVALID <= grp_sound_sender_Pipeline_2_fu_186_m_axi_out_bus_WVALID;
        else 
            out_bus_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    out_bus_blk_n_AW_assign_proc : process(m_axi_out_bus_AWREADY, ap_CS_fsm_state3, ap_CS_fsm_state10, select_ln67_reg_311)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln67_reg_311 = ap_const_lv9_C8)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln67_reg_311 = ap_const_lv9_0)))) then 
            out_bus_blk_n_AW <= m_axi_out_bus_AWREADY;
        else 
            out_bus_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    out_bus_blk_n_B_assign_proc : process(m_axi_out_bus_BVALID, ap_CS_fsm_state10, select_ln67_reg_311, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (select_ln67_reg_311 = ap_const_lv9_C8)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (select_ln67_reg_311 = ap_const_lv9_0)))) then 
            out_bus_blk_n_B <= m_axi_out_bus_BVALID;
        else 
            out_bus_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    out_bus_blk_n_W_assign_proc : process(m_axi_out_bus_WREADY, ap_CS_fsm_state17, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            out_bus_blk_n_W <= m_axi_out_bus_WREADY;
        else 
            out_bus_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    select_ln67_fu_267_p3 <= 
        ap_const_lv9_0 when (icmp_ln67_fu_261_p2(0) = '1') else 
        add_ln65_fu_256_p2;
        sext_ln64_fu_241_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln_fu_233_p3),27));

    shl_ln_fu_219_p3 <= (burst_count_reg & ap_const_lv4_0);
    zext_ln64_fu_245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln64_fu_241_p1),32));
end behav;
