// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="waterfall_sender_waterfall_sender,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010-clg400-1,HLS_INPUT_CLOCK=25.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=18.250000,HLS_SYN_LAT=4102,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=836,HLS_SYN_LUT=1788,HLS_VERSION=2022_2}" *)

module waterfall_sender (
        ap_clk,
        ap_rst_n,
        in_bus_TDATA,
        in_bus_TVALID,
        in_bus_TREADY,
        in_bus_TKEEP,
        in_bus_TSTRB,
        in_bus_TLAST,
        start_send,
        module_idx,
        m_axi_out_bus_AWVALID,
        m_axi_out_bus_AWREADY,
        m_axi_out_bus_AWADDR,
        m_axi_out_bus_AWID,
        m_axi_out_bus_AWLEN,
        m_axi_out_bus_AWSIZE,
        m_axi_out_bus_AWBURST,
        m_axi_out_bus_AWLOCK,
        m_axi_out_bus_AWCACHE,
        m_axi_out_bus_AWPROT,
        m_axi_out_bus_AWQOS,
        m_axi_out_bus_AWREGION,
        m_axi_out_bus_AWUSER,
        m_axi_out_bus_WVALID,
        m_axi_out_bus_WREADY,
        m_axi_out_bus_WDATA,
        m_axi_out_bus_WSTRB,
        m_axi_out_bus_WLAST,
        m_axi_out_bus_WID,
        m_axi_out_bus_WUSER,
        m_axi_out_bus_ARVALID,
        m_axi_out_bus_ARREADY,
        m_axi_out_bus_ARADDR,
        m_axi_out_bus_ARID,
        m_axi_out_bus_ARLEN,
        m_axi_out_bus_ARSIZE,
        m_axi_out_bus_ARBURST,
        m_axi_out_bus_ARLOCK,
        m_axi_out_bus_ARCACHE,
        m_axi_out_bus_ARPROT,
        m_axi_out_bus_ARQOS,
        m_axi_out_bus_ARREGION,
        m_axi_out_bus_ARUSER,
        m_axi_out_bus_RVALID,
        m_axi_out_bus_RREADY,
        m_axi_out_bus_RDATA,
        m_axi_out_bus_RLAST,
        m_axi_out_bus_RID,
        m_axi_out_bus_RUSER,
        m_axi_out_bus_RRESP,
        m_axi_out_bus_BVALID,
        m_axi_out_bus_BREADY,
        m_axi_out_bus_BRESP,
        m_axi_out_bus_BID,
        m_axi_out_bus_BUSER,
        interrupt_out,
        interrupt_out_ap_vld
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;
parameter    C_M_AXI_OUT_BUS_ID_WIDTH = 1;
parameter    C_M_AXI_OUT_BUS_ADDR_WIDTH = 64;
parameter    C_M_AXI_OUT_BUS_DATA_WIDTH = 64;
parameter    C_M_AXI_OUT_BUS_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_BUS_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_BUS_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_BUS_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_BUS_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_BUS_TARGET_ADDR = 0;
parameter    C_M_AXI_OUT_BUS_USER_VALUE = 0;
parameter    C_M_AXI_OUT_BUS_PROT_VALUE = 0;
parameter    C_M_AXI_OUT_BUS_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_M_AXI_OUT_BUS_WSTRB_WIDTH = (64 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_bus_TDATA;
input   in_bus_TVALID;
output   in_bus_TREADY;
input  [3:0] in_bus_TKEEP;
input  [3:0] in_bus_TSTRB;
input  [0:0] in_bus_TLAST;
input   start_send;
input   module_idx;
output   m_axi_out_bus_AWVALID;
input   m_axi_out_bus_AWREADY;
output  [C_M_AXI_OUT_BUS_ADDR_WIDTH - 1:0] m_axi_out_bus_AWADDR;
output  [C_M_AXI_OUT_BUS_ID_WIDTH - 1:0] m_axi_out_bus_AWID;
output  [7:0] m_axi_out_bus_AWLEN;
output  [2:0] m_axi_out_bus_AWSIZE;
output  [1:0] m_axi_out_bus_AWBURST;
output  [1:0] m_axi_out_bus_AWLOCK;
output  [3:0] m_axi_out_bus_AWCACHE;
output  [2:0] m_axi_out_bus_AWPROT;
output  [3:0] m_axi_out_bus_AWQOS;
output  [3:0] m_axi_out_bus_AWREGION;
output  [C_M_AXI_OUT_BUS_AWUSER_WIDTH - 1:0] m_axi_out_bus_AWUSER;
output   m_axi_out_bus_WVALID;
input   m_axi_out_bus_WREADY;
output  [C_M_AXI_OUT_BUS_DATA_WIDTH - 1:0] m_axi_out_bus_WDATA;
output  [C_M_AXI_OUT_BUS_WSTRB_WIDTH - 1:0] m_axi_out_bus_WSTRB;
output   m_axi_out_bus_WLAST;
output  [C_M_AXI_OUT_BUS_ID_WIDTH - 1:0] m_axi_out_bus_WID;
output  [C_M_AXI_OUT_BUS_WUSER_WIDTH - 1:0] m_axi_out_bus_WUSER;
output   m_axi_out_bus_ARVALID;
input   m_axi_out_bus_ARREADY;
output  [C_M_AXI_OUT_BUS_ADDR_WIDTH - 1:0] m_axi_out_bus_ARADDR;
output  [C_M_AXI_OUT_BUS_ID_WIDTH - 1:0] m_axi_out_bus_ARID;
output  [7:0] m_axi_out_bus_ARLEN;
output  [2:0] m_axi_out_bus_ARSIZE;
output  [1:0] m_axi_out_bus_ARBURST;
output  [1:0] m_axi_out_bus_ARLOCK;
output  [3:0] m_axi_out_bus_ARCACHE;
output  [2:0] m_axi_out_bus_ARPROT;
output  [3:0] m_axi_out_bus_ARQOS;
output  [3:0] m_axi_out_bus_ARREGION;
output  [C_M_AXI_OUT_BUS_ARUSER_WIDTH - 1:0] m_axi_out_bus_ARUSER;
input   m_axi_out_bus_RVALID;
output   m_axi_out_bus_RREADY;
input  [C_M_AXI_OUT_BUS_DATA_WIDTH - 1:0] m_axi_out_bus_RDATA;
input   m_axi_out_bus_RLAST;
input  [C_M_AXI_OUT_BUS_ID_WIDTH - 1:0] m_axi_out_bus_RID;
input  [C_M_AXI_OUT_BUS_RUSER_WIDTH - 1:0] m_axi_out_bus_RUSER;
input  [1:0] m_axi_out_bus_RRESP;
input   m_axi_out_bus_BVALID;
output   m_axi_out_bus_BREADY;
input  [1:0] m_axi_out_bus_BRESP;
input  [C_M_AXI_OUT_BUS_ID_WIDTH - 1:0] m_axi_out_bus_BID;
input  [C_M_AXI_OUT_BUS_BUSER_WIDTH - 1:0] m_axi_out_bus_BUSER;
output   interrupt_out;
output   interrupt_out_ap_vld;

reg interrupt_out_ap_vld;

 reg    ap_rst_n_inv;
reg   [0:0] start_detect_reg;
reg    out_bus_blk_n_AW;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
reg    out_bus_blk_n_B;
wire    ap_CS_fsm_state9;
reg   [0:0] and_ln53_reg_193;
wire    ap_CS_fsm_state1;
wire   [0:0] and_ln53_fu_149_p2;
wire   [63:0] select_ln72_1_fu_161_p3;
reg   [63:0] select_ln72_1_reg_197;
wire   [21:0] select_ln72_fu_169_p3;
reg   [21:0] select_ln72_reg_202;
wire    grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_start;
wire    grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_done;
wire    grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_idle;
wire    grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_ready;
wire    grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWVALID;
wire   [63:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWADDR;
wire   [0:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWID;
wire   [31:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWLEN;
wire   [2:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWSIZE;
wire   [1:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWBURST;
wire   [1:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWLOCK;
wire   [3:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWCACHE;
wire   [2:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWPROT;
wire   [3:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWQOS;
wire   [3:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWREGION;
wire   [0:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWUSER;
wire    grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_WVALID;
wire   [63:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_WDATA;
wire   [7:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_WSTRB;
wire    grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_WLAST;
wire   [0:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_WID;
wire   [0:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_WUSER;
wire    grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARVALID;
wire   [63:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARADDR;
wire   [0:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARID;
wire   [31:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARLEN;
wire   [2:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARSIZE;
wire   [1:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARBURST;
wire   [1:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARLOCK;
wire   [3:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARCACHE;
wire   [2:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARPROT;
wire   [3:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARQOS;
wire   [3:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARREGION;
wire   [0:0] grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARUSER;
wire    grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_RREADY;
wire    grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_BREADY;
wire    grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_in_bus_TREADY;
reg    out_bus_AWVALID;
wire    out_bus_AWREADY;
reg   [63:0] out_bus_AWADDR;
reg   [31:0] out_bus_AWLEN;
reg    out_bus_WVALID;
wire    out_bus_WREADY;
wire    out_bus_ARREADY;
wire    out_bus_RVALID;
wire   [63:0] out_bus_RDATA;
wire   [8:0] out_bus_RFIFONUM;
wire    out_bus_BVALID;
reg    out_bus_BREADY;
reg   [0:0] ap_phi_mux_storemerge_phi_fu_115_p4;
reg   [0:0] storemerge_reg_111;
reg    ap_block_state9;
reg    grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [0:0] and_ln53_fu_149_p0;
wire   [0:0] xor_ln53_fu_143_p2;
wire   [0:0] select_ln72_1_fu_161_p0;
wire   [0:0] select_ln72_fu_169_p0;
reg   [8:0] ap_NS_fsm;
wire    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    regslice_both_in_bus_V_data_V_U_apdone_blk;
wire   [31:0] in_bus_TDATA_int_regslice;
wire    in_bus_TVALID_int_regslice;
reg    in_bus_TREADY_int_regslice;
wire    regslice_both_in_bus_V_data_V_U_ack_in;
wire    regslice_both_in_bus_V_keep_V_U_apdone_blk;
wire   [3:0] in_bus_TKEEP_int_regslice;
wire    regslice_both_in_bus_V_keep_V_U_vld_out;
wire    regslice_both_in_bus_V_keep_V_U_ack_in;
wire    regslice_both_in_bus_V_strb_V_U_apdone_blk;
wire   [3:0] in_bus_TSTRB_int_regslice;
wire    regslice_both_in_bus_V_strb_V_U_vld_out;
wire    regslice_both_in_bus_V_strb_V_U_ack_in;
wire    regslice_both_in_bus_V_last_V_U_apdone_blk;
wire   [0:0] in_bus_TLAST_int_regslice;
wire    regslice_both_in_bus_V_last_V_U_vld_out;
wire    regslice_both_in_bus_V_last_V_U_ack_in;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_detect_reg = 1'd0;
#0 ap_CS_fsm = 9'd1;
#0 grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_start_reg = 1'b0;
end

waterfall_sender_waterfall_sender_Pipeline_VITIS_LOOP_72_1 grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_start),
    .ap_done(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_done),
    .ap_idle(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_idle),
    .ap_ready(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_ready),
    .in_bus_TVALID(in_bus_TVALID_int_regslice),
    .m_axi_out_bus_AWVALID(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWVALID),
    .m_axi_out_bus_AWREADY(out_bus_AWREADY),
    .m_axi_out_bus_AWADDR(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWADDR),
    .m_axi_out_bus_AWID(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWID),
    .m_axi_out_bus_AWLEN(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWLEN),
    .m_axi_out_bus_AWSIZE(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWSIZE),
    .m_axi_out_bus_AWBURST(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWBURST),
    .m_axi_out_bus_AWLOCK(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWLOCK),
    .m_axi_out_bus_AWCACHE(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWCACHE),
    .m_axi_out_bus_AWPROT(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWPROT),
    .m_axi_out_bus_AWQOS(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWQOS),
    .m_axi_out_bus_AWREGION(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWREGION),
    .m_axi_out_bus_AWUSER(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWUSER),
    .m_axi_out_bus_WVALID(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_WVALID),
    .m_axi_out_bus_WREADY(out_bus_WREADY),
    .m_axi_out_bus_WDATA(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_WDATA),
    .m_axi_out_bus_WSTRB(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_WSTRB),
    .m_axi_out_bus_WLAST(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_WLAST),
    .m_axi_out_bus_WID(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_WID),
    .m_axi_out_bus_WUSER(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_WUSER),
    .m_axi_out_bus_ARVALID(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARVALID),
    .m_axi_out_bus_ARREADY(1'b0),
    .m_axi_out_bus_ARADDR(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARADDR),
    .m_axi_out_bus_ARID(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARID),
    .m_axi_out_bus_ARLEN(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARLEN),
    .m_axi_out_bus_ARSIZE(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARSIZE),
    .m_axi_out_bus_ARBURST(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARBURST),
    .m_axi_out_bus_ARLOCK(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARLOCK),
    .m_axi_out_bus_ARCACHE(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARCACHE),
    .m_axi_out_bus_ARPROT(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARPROT),
    .m_axi_out_bus_ARQOS(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARQOS),
    .m_axi_out_bus_ARREGION(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARREGION),
    .m_axi_out_bus_ARUSER(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_ARUSER),
    .m_axi_out_bus_RVALID(1'b0),
    .m_axi_out_bus_RREADY(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_RREADY),
    .m_axi_out_bus_RDATA(64'd0),
    .m_axi_out_bus_RLAST(1'b0),
    .m_axi_out_bus_RID(1'd0),
    .m_axi_out_bus_RFIFONUM(9'd0),
    .m_axi_out_bus_RUSER(1'd0),
    .m_axi_out_bus_RRESP(2'd0),
    .m_axi_out_bus_BVALID(out_bus_BVALID),
    .m_axi_out_bus_BREADY(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_BREADY),
    .m_axi_out_bus_BRESP(2'd0),
    .m_axi_out_bus_BID(1'd0),
    .m_axi_out_bus_BUSER(1'd0),
    .select_ln72(select_ln72_reg_202),
    .in_bus_TDATA(in_bus_TDATA_int_regslice),
    .in_bus_TREADY(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_in_bus_TREADY),
    .in_bus_TKEEP(in_bus_TKEEP_int_regslice),
    .in_bus_TSTRB(in_bus_TSTRB_int_regslice),
    .in_bus_TLAST(in_bus_TLAST_int_regslice)
);

waterfall_sender_out_bus_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUT_BUS_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUT_BUS_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUT_BUS_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUT_BUS_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUT_BUS_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUT_BUS_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUT_BUS_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUT_BUS_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_OUT_BUS_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_OUT_BUS_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUT_BUS_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUT_BUS_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 64 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
out_bus_m_axi_U(
    .AWVALID(m_axi_out_bus_AWVALID),
    .AWREADY(m_axi_out_bus_AWREADY),
    .AWADDR(m_axi_out_bus_AWADDR),
    .AWID(m_axi_out_bus_AWID),
    .AWLEN(m_axi_out_bus_AWLEN),
    .AWSIZE(m_axi_out_bus_AWSIZE),
    .AWBURST(m_axi_out_bus_AWBURST),
    .AWLOCK(m_axi_out_bus_AWLOCK),
    .AWCACHE(m_axi_out_bus_AWCACHE),
    .AWPROT(m_axi_out_bus_AWPROT),
    .AWQOS(m_axi_out_bus_AWQOS),
    .AWREGION(m_axi_out_bus_AWREGION),
    .AWUSER(m_axi_out_bus_AWUSER),
    .WVALID(m_axi_out_bus_WVALID),
    .WREADY(m_axi_out_bus_WREADY),
    .WDATA(m_axi_out_bus_WDATA),
    .WSTRB(m_axi_out_bus_WSTRB),
    .WLAST(m_axi_out_bus_WLAST),
    .WID(m_axi_out_bus_WID),
    .WUSER(m_axi_out_bus_WUSER),
    .ARVALID(m_axi_out_bus_ARVALID),
    .ARREADY(m_axi_out_bus_ARREADY),
    .ARADDR(m_axi_out_bus_ARADDR),
    .ARID(m_axi_out_bus_ARID),
    .ARLEN(m_axi_out_bus_ARLEN),
    .ARSIZE(m_axi_out_bus_ARSIZE),
    .ARBURST(m_axi_out_bus_ARBURST),
    .ARLOCK(m_axi_out_bus_ARLOCK),
    .ARCACHE(m_axi_out_bus_ARCACHE),
    .ARPROT(m_axi_out_bus_ARPROT),
    .ARQOS(m_axi_out_bus_ARQOS),
    .ARREGION(m_axi_out_bus_ARREGION),
    .ARUSER(m_axi_out_bus_ARUSER),
    .RVALID(m_axi_out_bus_RVALID),
    .RREADY(m_axi_out_bus_RREADY),
    .RDATA(m_axi_out_bus_RDATA),
    .RLAST(m_axi_out_bus_RLAST),
    .RID(m_axi_out_bus_RID),
    .RUSER(m_axi_out_bus_RUSER),
    .RRESP(m_axi_out_bus_RRESP),
    .BVALID(m_axi_out_bus_BVALID),
    .BREADY(m_axi_out_bus_BREADY),
    .BRESP(m_axi_out_bus_BRESP),
    .BID(m_axi_out_bus_BID),
    .BUSER(m_axi_out_bus_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(out_bus_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(out_bus_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(out_bus_RDATA),
    .I_RFIFONUM(out_bus_RFIFONUM),
    .I_AWVALID(out_bus_AWVALID),
    .I_AWREADY(out_bus_AWREADY),
    .I_AWADDR(out_bus_AWADDR),
    .I_AWLEN(out_bus_AWLEN),
    .I_WVALID(out_bus_WVALID),
    .I_WREADY(out_bus_WREADY),
    .I_WDATA(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_WDATA),
    .I_WSTRB(grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_WSTRB),
    .I_BVALID(out_bus_BVALID),
    .I_BREADY(out_bus_BREADY)
);

waterfall_sender_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_bus_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_bus_TDATA),
    .vld_in(in_bus_TVALID),
    .ack_in(regslice_both_in_bus_V_data_V_U_ack_in),
    .data_out(in_bus_TDATA_int_regslice),
    .vld_out(in_bus_TVALID_int_regslice),
    .ack_out(in_bus_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_bus_V_data_V_U_apdone_blk)
);

waterfall_sender_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_bus_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_bus_TKEEP),
    .vld_in(in_bus_TVALID),
    .ack_in(regslice_both_in_bus_V_keep_V_U_ack_in),
    .data_out(in_bus_TKEEP_int_regslice),
    .vld_out(regslice_both_in_bus_V_keep_V_U_vld_out),
    .ack_out(in_bus_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_bus_V_keep_V_U_apdone_blk)
);

waterfall_sender_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_bus_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_bus_TSTRB),
    .vld_in(in_bus_TVALID),
    .ack_in(regslice_both_in_bus_V_strb_V_U_ack_in),
    .data_out(in_bus_TSTRB_int_regslice),
    .vld_out(regslice_both_in_bus_V_strb_V_U_vld_out),
    .ack_out(in_bus_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_bus_V_strb_V_U_apdone_blk)
);

waterfall_sender_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_bus_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_bus_TLAST),
    .vld_in(in_bus_TVALID),
    .ack_in(regslice_both_in_bus_V_last_V_U_ack_in),
    .data_out(in_bus_TLAST_int_regslice),
    .vld_out(regslice_both_in_bus_V_last_V_U_vld_out),
    .ack_out(in_bus_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_bus_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_start_reg <= 1'b1;
        end else if ((grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_ready == 1'b1)) begin
            grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln53_fu_149_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        start_detect_reg <= 1'd0;
    end else if ((~((1'd1 == and_ln53_reg_193) & (out_bus_BVALID == 1'b0)) & (1'd1 == and_ln53_reg_193) & (1'b1 == ap_CS_fsm_state9))) begin
        start_detect_reg <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln53_fu_149_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        storemerge_reg_111 <= 1'd0;
    end else if ((~((1'd1 == and_ln53_reg_193) & (out_bus_BVALID == 1'b0)) & (1'd1 == and_ln53_reg_193) & (1'b1 == ap_CS_fsm_state9))) begin
        storemerge_reg_111 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        and_ln53_reg_193 <= and_ln53_fu_149_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln53_fu_149_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        select_ln72_1_reg_197[14 : 13] <= select_ln72_1_fu_161_p3[14 : 13];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        select_ln72_reg_202[14 : 13] <= select_ln72_fu_169_p3[14 : 13];
    end
end

assign ap_ST_fsm_state1_blk = 1'b0;

always @ (*) begin
    if ((out_bus_AWREADY == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if (((1'd1 == and_ln53_reg_193) & (out_bus_BVALID == 1'b0))) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln53_reg_193) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_storemerge_phi_fu_115_p4 = 1'd1;
    end else begin
        ap_phi_mux_storemerge_phi_fu_115_p4 = storemerge_reg_111;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        in_bus_TREADY_int_regslice = grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_in_bus_TREADY;
    end else begin
        in_bus_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln53_reg_193) & (out_bus_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
        interrupt_out_ap_vld = 1'b1;
    end else begin
        interrupt_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((out_bus_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        out_bus_AWADDR = select_ln72_1_reg_197;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        out_bus_AWADDR = grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWADDR;
    end else begin
        out_bus_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((out_bus_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        out_bus_AWLEN = 32'd4096;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        out_bus_AWLEN = grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWLEN;
    end else begin
        out_bus_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((out_bus_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        out_bus_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        out_bus_AWVALID = grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_AWVALID;
    end else begin
        out_bus_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln53_reg_193) & (out_bus_BVALID == 1'b0)) & (1'd1 == and_ln53_reg_193) & (1'b1 == ap_CS_fsm_state9))) begin
        out_bus_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        out_bus_BREADY = grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_BREADY;
    end else begin
        out_bus_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        out_bus_WVALID = grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_m_axi_out_bus_WVALID;
    end else begin
        out_bus_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_bus_blk_n_AW = m_axi_out_bus_AWREADY;
    end else begin
        out_bus_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln53_reg_193) & (1'b1 == ap_CS_fsm_state9))) begin
        out_bus_blk_n_B = m_axi_out_bus_BVALID;
    end else begin
        out_bus_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'd0 == and_ln53_fu_149_p2) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((out_bus_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if ((~((1'd1 == and_ln53_reg_193) & (out_bus_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln53_fu_149_p0 = start_send;

assign and_ln53_fu_149_p2 = (xor_ln53_fu_143_p2 & and_ln53_fu_149_p0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state9 = ((1'd1 == and_ln53_reg_193) & (out_bus_BVALID == 1'b0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_start = grp_waterfall_sender_Pipeline_VITIS_LOOP_72_1_fu_124_ap_start_reg;

assign in_bus_TREADY = regslice_both_in_bus_V_data_V_U_ack_in;

assign interrupt_out = ap_phi_mux_storemerge_phi_fu_115_p4;

assign select_ln72_1_fu_161_p0 = module_idx;

assign select_ln72_1_fu_161_p3 = ((select_ln72_1_fu_161_p0[0:0] == 1'b1) ? 64'd65552385 : 64'd65544193);

assign select_ln72_fu_169_p0 = module_idx;

assign select_ln72_fu_169_p3 = ((select_ln72_fu_169_p0[0:0] == 1'b1) ? 22'd2637825 : 22'd2629633);

assign xor_ln53_fu_143_p2 = (start_detect_reg ^ 1'd1);

always @ (posedge ap_clk) begin
    select_ln72_1_reg_197[12:0] <= 13'b0000000000001;
    select_ln72_1_reg_197[63:15] <= 49'b0000000000000000000000000000000000000011111010000;
    select_ln72_reg_202[12:0] <= 13'b0000000000001;
    select_ln72_reg_202[21:15] <= 7'b1010000;
end


reg find_kernel_block = 0;
// synthesis translate_off
`include "waterfall_sender_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //waterfall_sender

